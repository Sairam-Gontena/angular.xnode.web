# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  - dev
  - release-qa
  - release-demo
  - release-beta

stages:
  - stage: build
    displayName: "Build"
    jobs:
      - job: build_test
        displayName: "Build"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSource: 'spec'
              versionSpec: '18.x'
            displayName: "Install Node.js"

          - task: npmAuthenticate@0
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
            inputs:
              workingFile: dev.npmrc
            displayName: "Authenticate with dev Artifacts"

          - task: npmAuthenticate@0
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-beta'))
            inputs:
              workingFile: beta.npmrc
            displayName: "Authenticate with app-US Artifacts"

          - task: Bash@3
            displayName: "Install Node Packages"
            inputs:
              targetType: 'inline'
              script: 'npm i navi-web --force'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: Bash@3
            displayName: "Install Node Packages"
            inputs:
              targetType: 'inline'
              script: 'npm i --force'
              workingDirectory: '$(System.DefaultWorkingDirectory)'
          
          - task: Bash@3
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
            displayName: "Create Build"
            inputs:
              targetType: 'inline'
              script: 'npm run build:dev'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/dev'))
            displayName: "Deploy to Azure WebApp"
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'xnode-spn'
              appType: 'webAppLinux'
              WebAppName: 'dev-xnode'
              packageForLinux: '$(System.DefaultWorkingDirectory)/dist/xnode'

          - task: Bash@3
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-qa'))
            displayName: "Create Build"
            inputs:
              targetType: 'inline'
              script: 'npm run build:qa'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-qa'))
            displayName: "Deploy to Azure WebApp"
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'xnode-spn'
              appType: 'webAppLinux'
              WebAppName: 'qa-xnode'
              packageForLinux: '$(System.DefaultWorkingDirectory)/dist/xnode'
            
          - task: Bash@3
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-demo'))
            displayName: "Create Build"
            inputs:
              targetType: 'inline'
              script: 'npm run build:demo'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-demo'))
            displayName: "Deploy to Azure WebApp"
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'xnode-spn'
              appType: 'webAppLinux'
              WebAppName: 'demo-xnode'
              packageForLinux: '$(System.DefaultWorkingDirectory)/dist/xnode'
            
          - task: Bash@3
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-beta'))
            displayName: "Create Build"
            inputs:
              targetType: 'inline'
              script: 'npm run build:beta'
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: AzureRmWebAppDeployment@4
            condition: and(succeeded(),eq(variables['Build.SourceBranch'], 'refs/heads/release-beta'))
            displayName: "Deploy to Azure WebApp"
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'xnode-spn'
              appType: 'webAppLinux'
              WebAppName: 'beta-xnode'
              packageForLinux: '$(System.DefaultWorkingDirectory)/dist/xnode'